# 使用语言
language: node_js
# node版本
node_js: stable
# 设置只监听哪个分支
branches:
  only:
  - master
# 缓存，可以节省集成的时间，这里我用了yarn，如果不用可以删除
cache:
  apt: true
  directories:
    - node_modules
# tarvis生命周期执行顺序详见官网文档
before_install:
# 配置git账户信息
- git config --global user.name "mrtanis"
- git config --global user.email "mrtanis1992@hotmail.com"
# 安装hexo-cli
- npm install -g hexo-cli
# 安装yuque-hexo(用于解析生成语雀发布的文章到hexo)
- npm install -g yuque-hexo
install:
# 安装其他依赖
- npm i
script:
# 实际执行的是 ‘yuque-hexo sync’ ，具体定义在package.json的scripts里
- npm run sync
# 清除缓存文件 (db.json) 和已生成的静态文件 (public)
- hexo clean
# 生成静态文件
- hexo g
after_success:
# 接下来的步骤就是将public文件夹里面的内容推送到github.io
# 本来可以用 'hexo deploy' 命令执行，但是这里使用的是github的access token授权，没有采用ssh，所以采用手动push
- cd ./public
- git init
- git add --all .
- git commit -m "Travis CI Auto Builder"
# 这里的 REPO_TOKEN 即之前在 travis 项目的环境变量里添加的
- git push --quiet --force https://$REPO_TOKEN@github.com/mrtanis/mrtanis.github.io.git
  master